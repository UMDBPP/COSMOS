private; begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 1); load 'cosmos/tools/test_runner/test.rb'; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 1); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 1); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 2); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 2); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 2); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 3); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 3); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 3); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 4); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 4); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 4); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 5); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 5); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 5); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 6); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 6); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 6); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 7); class ExampleTest < Cosmos::Test
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 8);   def initialize
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 9);     super(); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 9); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 9); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 11); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 11); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 11); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 12);   ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 12); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 12); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 13);   def setup
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 14);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 14); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 14); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 15);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 15); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 15); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 17); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 17); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 17); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 18);   ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 18); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 18); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 19);   def test_case_with_long_name_1
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 20);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 20); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 20); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 21);     Cosmos::Test.puts "This test verifies requirement 1"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 21); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 21); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 22);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 22); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 22); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 24); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 24); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 24); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 25);   ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 25); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 25); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 26);   def test_2
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 27);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 27); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 27); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 28);     Cosmos::Test.puts "This test verifies requirement 2"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 28); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 28); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 29);     if $manual
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 30);       answer = ask "Are you sure?"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 30); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 30); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 31);     else
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 32);       answer = 'y'; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 32); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 32); end
    end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 34);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 34); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 34); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 36); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 36); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 36); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 37);   def test_3xx
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 38);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 38); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 38); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 39);     wait 1; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 39); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 39); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 41); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 41); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 41); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 42);   ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 42); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 42); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 43);   def teardown
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 44);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 44); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 44); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 45);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 45); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 45); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 47); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 47); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 47); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 48);   def helper_method
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 49); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 49); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 49); end
  end
end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 52); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 52); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 52); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 53); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 53); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 53); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 54); class ExampleTestSuite < Cosmos::TestSuite
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 55);   def initialize
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 56);     super(); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 56); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 56); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 57);     add_test('ExampleTest'); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 57); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 57); end
  end
end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 60); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 60); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 60); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 61); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 61); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 61); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 62); class ExampleTest2 < Cosmos::Test
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 63);   def setup
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 64);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 64); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 64); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 65);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 65); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 65); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 67); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 67); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 67); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 68);   ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 68); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 68); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 69);   def test_2
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 70);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 70); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 70); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 71);     raise "BAD"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 71); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 71); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 72);     puts "continuing past the exception"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 72); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 72); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 73);     wait 2; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 73); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 73); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 75); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 75); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 75); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 76);   def test_3
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 77);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 77); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 77); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 78);     raise SkipTestCase, "test_3 unimplemented"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 78); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 78); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 79);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 79); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 79); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 81); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 81); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 81); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 82);   def test_4
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 83);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 83); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 83); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 84);     if non_existent
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 85);       puts "can't get here"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 85); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 85); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 86);     else
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 87);       puts "can't get here either"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 87); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 87); end
    end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 89);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 89); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 89); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 91); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 91); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 91); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 92);   def teardown
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 93);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 93); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 93); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 94);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 94); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 94); end
  end
end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 97); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 97); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 97); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 98); class ExampleTestSuite2 < Cosmos::TestSuite
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 99);   def initialize
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 100);     super(); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 100); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 100); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 101);     add_test('ExampleTest2'); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 101); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 101); end
  end
end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 104); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 104); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 104); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 105); class ExampleTestSuite3 < Cosmos::TestSuite
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 106);   ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 106); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 106); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 107);   def setup
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 108);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 108); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 108); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 109);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 109); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 109); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 111); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 111); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 111); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 112);   def initialize
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 113);     super(); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 113); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 113); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 114);     add_test_setup('ExampleTest'); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 114); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 114); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 115);     ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 115); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 115); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 116);     ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 116); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 116); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 117);     ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 117); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 117); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 118);     ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 118); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 118); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 119);     add_test('ExampleTest'); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 119); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 119); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 120);     add_test('ExampleTest2'); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 120); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 120); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 121);     add_test_teardown('ExampleTest'); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 121); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 121); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 123); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 123); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 123); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 124);   ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 124); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 124); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 125);   def teardown
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 126);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 126); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 126); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 127);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 127); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 127); end
  end
end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 130); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 130); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 130); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 131); class ExampleTest3 < Cosmos::Test
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 132);   def test_5
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 133);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 133); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 133); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 134);     puts "\000\001\002"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 134); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 134); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 135);     check_expression("false == true"); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 135); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 135); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 136);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 136); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 136); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 138); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 138); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 138); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 139);   def test_6
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 140);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 140); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 140); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 141);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 141); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 141); end
  end
end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 144); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 144); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 144); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 145); class ExampleTestSuite4 < Cosmos::TestSuite
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 146);   ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 146); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 146); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 147);   def setup
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 148);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 148); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 148); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 149);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 149); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 149); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 151); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 151); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 151); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 152);   def initialize
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 153);     super(); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 153); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 153); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 154);     add_test_setup('ExampleTest'); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 154); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 154); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 155);     add_test_case('ExampleTest', 'test_2'); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 155); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 155); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 156);     add_test_case('ExampleTest', 'test_3xx'); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 156); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 156); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 157);     add_test_teardown('ExampleTest'); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 157); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 157); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 159); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 159); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 159); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 160);   ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 160); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 160); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 161);   def teardown
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 162);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 162); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 162); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 163);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 163); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 163); end
  end
end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 166); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 166); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 166); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 167); class ExampleTestSuite5 < Cosmos::TestSuite
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 168);   def initialize
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 169);     super(); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 169); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 169); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 170);     add_test_teardown('ExampleTest'); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 170); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 170); end
  end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 172); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 172); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 172); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 173);   ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 173); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 173); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 174);   def teardown
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 175);     puts "Running #{Cosmos::Test.current_test_suite}:#{Cosmos::Test.current_test}:#{Cosmos::Test.current_test_case}"; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 175); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 175); end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 176);     wait(2); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 176); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 176); end
  end
end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 179); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 179); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 179); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 180); class EmptyTestSuite < Cosmos::TestSuite
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 181);   def initialize
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 182);     super(); ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 182); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 182); end
  end
end
begin; ScriptRunnerFrame.instance.script_binding = binding(); if ScriptRunnerFrame.instance.inline_return then ScriptRunnerFrame.instance.inline_return = nil; return ScriptRunnerFrame.instance.inline_return_params; end; ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 185); ; ScriptRunnerFrame.instance.post_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 185); rescue Exception => eval_error; retry if ScriptRunnerFrame.instance.exception_instrumentation(eval_error, 'C:/COSMOS/BPP/procedures/example_test.rb', 185); end
ScriptRunnerFrame.instance.pre_line_instrumentation('C:/COSMOS/BPP/procedures/example_test.rb', 186); class EmptyTest < Cosmos::Test
end
